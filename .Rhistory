df1 <- pluton
url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone <- read.table(url, sep = ",", row.names = NULL)
colnames(abalone) <- c(
"sex", "longest_shell", "diameter", "height", "whole_weight",
"shucked_weight", "visceral_weight", "shell_weight", "rings")
abalone <- abalone[, c("longest_shell", "whole_weight", "rings")]
plot(longest_shell, whole_weight, data = abalone)
library(ggplot2)
ggplot2::ggplot(
abalone,
aes(x = longest_shell, y = whole_weight, col = rings)) +
ggplot2::geom_point(alpha = 0.7) +
ggplot2::scale_color_viridis_c() +
ggplot2::labs(
x = "longest shell"
y = "whole weight"
ggplot2::ggplot(
abalone,
aes(x = longest_shell, y = whole_weight, col = rings)) +
ggplot2::geom_point(alpha = 0.7) +
ggplot2::scale_color_viridis_c() +
ggplot2::labs(
x = "longest shell",
y = "whole weight",
title = "weight vs shell length for abalone data"
)
install.packages("mlr3")
library(mlr3)
task_abalone <- mlr3::TaskRegr$new(
id = "abalone", bakend = abalone, target ="rings"
)
task_abalone <- mlr3::TaskRegr$new(
id = "abalone", backend = abalone, target ="rings"
)
library(mlr3learners)
install.packages("mlr3learners")
library(mlr3learners)
learner_lm <- mlr3::lrn("regr.lm")
learner_lm$train(task_abalone)
pred_lm <- learner_lm$predict(task_abalone)
head(data.frame(
id = 1:length(pred_lm$truth),
truth = pred_lm$truth,
response = pred_lm$response))
library(mlr3viz)
install.packages("mlr3viz")
library(mlr3viz)
mlr3viz::autoplot(pred_lm)
mae <- mlr3::msr("regr.mae")
pred_lm$score()
pred_lm$score(mae)
summary(learner_lm$model)
